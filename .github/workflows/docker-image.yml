name: Docker Image CI

on:
  pull_request:
    types:
      - closed
    branches:
      - master


jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    build:
      runs-on: ubuntu-latest
      steps:

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test 

      - name: Build with Docker
        run: |
          docker build \
            --build-arg PROD_DB_PASSWORD="${{ secrets.ENV_PROD_DB_PASSWORD }}" \
            --build-arg PROD_DB_URL="${{ secrets.ENV_PROD_DB_URL }}" \
            --build-arg PROD_DB_USERNAME="${{ secrets.ENV_PROD_DB_USERNAME }}" \
            --build-arg PROD_REDIS_HOST="${{ secrets.ENV_PROD_REDIS_HOST }}" \
            --build-arg PROD_REDIS_PORT="${{ secrets.ENV_PROD_REDIS_PORT }}" \
            --build-arg PROD_REDIS_PASSWORD="${{ secrets.ENV_PROD_REDIS_PASSWORD }}" \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }} .

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Docker Hub Publish
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}

      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port ${{ secrets.SSH_PORT }} --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: WAS Instance SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo docker stop $(sudo docker ps -aq -f "name=${{ vars.APP_NAME }}") 
            sudo docker rm $(sudo docker ps -aq -f "name=${{ vars.APP_NAME }}") 
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}
            sudo docker run -d -p 8080:8080 --name ${{ vars.APP_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.APP_NAME }}

      - name: Remove Github Actions IP From Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port ${{ secrets.SSH_PORT }} --cidr ${{ steps.ip.outputs.ipv4 }}/32
